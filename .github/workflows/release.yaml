name: Release Artifacts and Container Images

on:
  push:
    tags:
      - "v*"
    branches: [main]

permissions:
  contents: write
  packages: write

jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Call Dagger Function
        uses: dagger/dagger-for-github@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: "latest"
          verb: call
          args: release --github-token='env:${{ env.GITHUB_TOKEN }}'

  publish-images:
    permissions:
      contents: write
      packages: write
      id-token: write
    runs-on: ubuntu-latest
    environment: PROD
    id: publish
    env:
      COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      REGISTRY_ADDRESS: ${{ vars.REGISTRY_ADDRESS }}
      PUBLISH_ADDRESS: ${{ vars.PUBLISH_ADDRESS }}
      TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Call Docker-Publish Function
        uses: dagger/dagger-for-github@v6
        with:
          version: "latest"
          verb: call
          args: "publish-image --cosign-password='env:${{ env.COSIGN_PASSWORD }}' --cosign-key='env:${{ env.COSIGN_KEY }}' --reg-username='${{ env.REGISTRY_USERNAME }}' --reg-password='env:${{ env.REGISTRY_PASSWORD }}' --reg-address='${{ env.REGISTRY_ADDRESS }}' --publish-address='${{ env.PUBLISH_ADDRESS }}' --tag='${{ env.TAG }}'"
        outputs:
          image_sha: ${{ steps.publish.outputs.image_sha }}

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - name: Keyless signing of image
        run: |
          cosign sign --yes --rekor-url "https://rekor.sigstore.dev/" ${{ steps.publish.outputs.image_sha }}

      - name: Notify on success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              body: "Container image published successfully! üéâ"
            })
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              body: "Failed to publish Container image. ‚ùå"
            })
